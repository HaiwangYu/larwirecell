diff --git a/build_jsonnet.sh b/build_jsonnet.sh
index b4c3494..0aadead 100755
--- a/build_jsonnet.sh
+++ b/build_jsonnet.sh
@@ -3,7 +3,7 @@
 
 usage()
 {
-   echo "USAGE: `basename ${0}` <product_dir> [tar]"
+   echo "USAGE: `basename ${0}` <product_dir> <e10|e14> <prof|debug> [tar]"
 }
 
 # -------------------------------------------------------------------
@@ -37,7 +37,7 @@ function setup_and_verify()
 {
     # this should not complain
     echo "Finished building ${package} ${pkgver}"
-    setup ${package} ${pkgver}  -z ${product_dir}:${PRODUCTS}
+    setup ${package} ${pkgver} -q ${fullqual} -z ${product_dir}:${PRODUCTS}
     echo "${package} is installed at ${JSONNET_FQ_DIR}"
 }
 
@@ -47,7 +47,9 @@ function setup_and_verify()
 # -------------------------------------------------------------------
 
 product_dir=${1}
-maketar=${2}
+basequal=${2}
+extraqual=${3}
+maketar=${4}
 
 if [ -z ${product_dir} ]
 then
@@ -67,28 +69,53 @@ ssibuildshims_version=v0_16_00
 pkgdotver=`echo ${origpkgver} | sed -e 's/_/./g' -e 's/^v//'`
 pkgtar=jsonnet-${pkgdotver}.tar.gz
 
+make_tarball_opts=("\${product_dir}" "\${package}" "\${pkgver}" "\${fullqual}")
+
 get_this_dir
 get_ssibuildshims
-source define_basics NO_QUAL
+source define_basics
 
 if [ "${maketar}" = "tar" ] && [ -d ${pkgdir}/bin ]
 then
-   ${SSIBUILDSHIMS_DIR}/bin/make_distribution_tarball ${product_dir} ${package} ${pkgver} NO_QUAL
+   eval ${SSIBUILDSHIMS_DIR}/bin/make_distribution_tarball "${make_tarball_opts[@]}"
    exit 0
 fi
 
-echo "building ${package} for ${OS} (flavor ${flvr})"
+echo "building ${package} for ${OS}-${plat}-${qualdir} (flavor ${flvr})"
 
 # -------------------------------------------------------------------
 # package dependent stuff goes here
 # -------------------------------------------------------------------
 
+case ${extraqual} in
+debug) cflg="-g -O0";;
+prof)  cflg="-O3 -g -DNDEBUG -fno-omit-frame-pointer";;
+* )
+   echo "ERROR: please specify debug or prof"
+   usage
+   exit 1
+;;
+esac
+
+if [[ "${basequal}" == e1[024] ]]
+then
+  cxxflg="${cflg} -std=c++14"
+else
+  ssi_die "Qualifier $basequal not recognized."
+fi
+
 mkdir -p ${pkgdir}/bin
 if [ ! -d ${pkgdir}/bin ]
 then
    echo "ERROR: failed to create ${pkgdir}/bin"
    exit 1
 fi
+mkdir -p ${pkgdir}/lib
+if [ ! -d ${pkgdir}/lib ]
+then
+   echo "ERROR: failed to create ${pkgdir}/lib"
+   exit 1
+fi
 mkdir -p ${pkgdir}/include
 if [ ! -d ${pkgdir}/include ]
 then
@@ -96,6 +123,11 @@ then
    exit 1
 fi
 
+fakedb=${product_dir}/${package}/${pkgver}/fakedb
+${SSIBUILDSHIMS_DIR}/bin/fake_declare_product ${product_dir} ${package} ${pkgver} ${fullqual}
+
+setup -B ${package} ${pkgver} -q ${fullqual} -z ${fakedb}:${product_dir}:${PRODUCTS} || ssi_die "ERROR: fake setup failed"
+
 cd ${pkgdir} || ssi_die "Unable to cd to ${pkgdir}"
 tar xf ${tardir}/${pkgtar} || ssi_die "Unable to unwind ${tardir}/${pkgtar} into ${PWD}"
 
@@ -106,9 +138,12 @@ cd ${pkgdir}/jsonnet-${pkgdotver} || ssi_die "Unable to cd to ${pkgdir}/jsonnet-
 set -x
 
 make || ssi_die "Failed in 'make'"
+make libjsonnet.so || ssi_die "Failed in 'make libjsonnet.so'"
+make libjsonnet++.so || ssi_die "Failed in 'make libjsonnet++.so'"
 # this is the "install" step
 cp -p ${pkgdir}/jsonnet-${pkgdotver}/jsonnet ${pkgdir}/bin/ || exit 1
 cp -p ${pkgdir}/jsonnet-${pkgdotver}/include/*.h ${pkgdir}/include/ || exit 1
+cp -p ${pkgdir}/jsonnet-${pkgdotver}/*.so ${pkgdir}/lib/ || exit 1
 # make clean removes EVERYTHING
 make clean || ssi_die "Failed to clean"
 
@@ -122,8 +157,8 @@ then
 fi
 
 # real ups declare
-${SSIBUILDSHIMS_DIR}/bin/declare_product ${product_dir} ${package} ${pkgver} NO_QUAL || \
-  ssi_die "failed to declare ${package} ${pkgver}"
+${SSIBUILDSHIMS_DIR}/bin/declare_product ${product_dir} ${package} ${pkgver} ${fullqual} || \
+  ssi_die "failed to declare ${package} ${pkgver} -q ${fullqual}"
 
 # -------------------------------------------------------------------
 # common bottom stuff
@@ -134,8 +169,7 @@ setup_and_verify
 # this must be last
 if [ "${maketar}" = "tar" ] && [ -d ${pkgdir}/lib ]
 then
-   ${SSIBUILDSHIMS_DIR}/bin/make_distribution_tarball ${product_dir} ${package} ${pkgver} NO_QUAL
-
+   eval ${SSIBUILDSHIMS_DIR}/bin/make_distribution_tarball "${make_tarball_opts[@]}"
 fi
 
 exit 0
diff --git a/ups/jsonnet.table b/ups/jsonnet.table
index 40dfac2..dbb2cb5 100644
--- a/ups/jsonnet.table
+++ b/ups/jsonnet.table
@@ -6,16 +6,59 @@ Product=jsonnet
 Group:
 
 Flavor=ANY
-Qualifiers=""
+Qualifiers=e14:prof
+
+  Action=DefineFQ
+    envSet (JSONNET_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e14-prof)
+
+  Action = ExtraSetup
+    setupRequired( gcc v6_3_0 )
+
+Flavor=ANY
+Qualifiers=e14:debug
+
+  Action=DefineFQ
+    envSet (JSONNET_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e14-debug)
+
+  Action = ExtraSetup
+    setupRequired( gcc v6_3_0 )
+
+Flavor=ANY
+Qualifiers=e10:prof
+
+  Action=DefineFQ
+    envSet (JSONNET_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e10-prof)
+
+  Action = ExtraSetup
+    setupRequired( gcc v4_9_3a )
+
+Flavor=ANY
+Qualifiers=e10:debug
+
+  Action=DefineFQ
+    envSet (JSONNET_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR}-e10-debug)
+
+  Action = ExtraSetup
+    setupRequired( gcc v4_9_3a )
+
 
 Common:
    Action=setup
       setupenv()
       proddir()
+      ExeActionRequired(DefineFQ)
       envSet(JSONNET_VERSION, ${UPS_PROD_VERSION})
-      envSet(JSONNET_FQ_DIR, ${UPS_PROD_DIR}/${UPS_PROD_FLAVOR})
+      # add the lib directory to LD_LIBRARY_PATH
+      envSet(JSONNET_LIB, ${JSONNET_FQ_DIR}/lib)
       envSet(JSONNET_INC, ${JSONNET_FQ_DIR}/include)
+      if ( test `uname` = "Darwin" )
+        envPrepend(DYLD_LIBRARY_PATH, ${JSONNET_FQ_DIR}/lib)
+       else()
+        envPrepend(LD_LIBRARY_PATH, ${JSONNET_FQ_DIR}/lib)
+      endif ( test `uname` = "Darwin" )
       pathPrepend(PATH, ${JSONNET_FQ_DIR}/bin )
+      # requirements
+      exeActionRequired(ExtraSetup)
 End:
 # End Group definition
 #*************************************************
